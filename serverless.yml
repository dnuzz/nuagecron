service: nuagecron

frameworkVersion: '2 || 3'

custom:
  servicename: ${file(./nuagecron/servicename.json):servicename} 
  pythonRequirements:
    usePoetry: true
    dockerizePip: true
    dockerfile: Dockerfile
  wsgi:
    app: nuagecron.service.app.app
    packRequirements: false

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ SchedulesTable, Arn ]
            - Fn::GetAtt: [ ExecutionsTable, Arn ]
  environment:
    SCHEDULES_TABLE: ${self:custom.servicename}-schedules
    EXECUTIONS_TABLE: ${self:custom.servicename}-executions

functions:
  api:
    handler: nuagecron.service.wsgi_handler.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY
  tick:
    name: ${self:custom.servicename}-tick
    handler: nuagecron.service.lambdas.tick.lambda_handler
    events:
      - schedule: rate(2 hours)
  executor:
    name: ${self:custom.servicename}-executor
    handler: nuagecron.service.lambdas.executor.lambda_handler
  updater:
    name: ${self:custom.servicename}-updater
    handler: nuagecron.service.lambdas.updater.lambda_handler

plugins:
  - serverless-wsgi
  - serverless-python-requirements

resources:
  Resources:
    SchedulesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: schedule_id
            AttributeType: S
          - AttributeName: enabled
            AttributeType: S
          - AttributeName: next_run
            AttributeType: 'N'
          - AttributeName: project_stack
            AttributeType: S
        KeySchema:
          - AttributeName: schedule_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.servicename}-schedules
        GlobalSecondaryIndexes:
          - IndexName: ${self:custom.servicename}-schedules-enabled
            KeySchema:
              - AttributeName: enabled
                KeyType: HASH
              - AttributeName: next_run
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
          - IndexName: ${self:custom.servicename}-schedules-project-stack
            KeySchema:
              - AttributeName: project_stack
                KeyType: HASH
            Projection:
              ProjectionType: 'KEYS ONLY'
    ExecutionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: schedule_id
            AttributeType: S
          - AttributeName: execution_time
            AttributeType: 'N'
          - AttributeName: execution_id
            AttributeType: S
        KeySchema:
          - AttributeName: schedule_id
            KeyType: HASH
          - AttributeName: execution_time
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.servicename}-executions
        GlobalSecondaryIndexes:
          - IndexName: ${self:custom.servicename}-executions-execution-id
            KeySchema:
              - AttributeName: execution_id
                KeyType: HASH
            Projection:
              ProjectionType: 'KEYS ONLY'
